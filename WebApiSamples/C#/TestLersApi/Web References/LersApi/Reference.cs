//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TestLersApi.LersApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ApiSoap", Namespace="http://www.lers.ru/website/api")]
    public partial class Api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointByIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointByNumberExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeByIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeByNumberExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoomByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoomByIdExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNodeListExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointConsumptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportMeasurePointDataToXml80020OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointElectricPowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeasurePointDeviceErrorsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Api() {
            this.Url = global::TestLersApi.Properties.Settings.Default.TestLersApi_LersApi_Api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetMeasurePointByIdCompletedEventHandler GetMeasurePointByIdCompleted;
        
        /// <remarks/>
        public event GetMeasurePointByIdExtendedCompletedEventHandler GetMeasurePointByIdExtendedCompleted;
        
        /// <remarks/>
        public event GetMeasurePointByNumberCompletedEventHandler GetMeasurePointByNumberCompleted;
        
        /// <remarks/>
        public event GetMeasurePointByNumberExtendedCompletedEventHandler GetMeasurePointByNumberExtendedCompleted;
        
        /// <remarks/>
        public event GetNodeByIdCompletedEventHandler GetNodeByIdCompleted;
        
        /// <remarks/>
        public event GetNodeByIdExtendedCompletedEventHandler GetNodeByIdExtendedCompleted;
        
        /// <remarks/>
        public event GetNodeByNumberCompletedEventHandler GetNodeByNumberCompleted;
        
        /// <remarks/>
        public event GetNodeByNumberExtendedCompletedEventHandler GetNodeByNumberExtendedCompleted;
        
        /// <remarks/>
        public event GetRoomByIdCompletedEventHandler GetRoomByIdCompleted;
        
        /// <remarks/>
        public event GetRoomByIdExtendedCompletedEventHandler GetRoomByIdExtendedCompleted;
        
        /// <remarks/>
        public event GetMeasurePointListCompletedEventHandler GetMeasurePointListCompleted;
        
        /// <remarks/>
        public event GetNodeListCompletedEventHandler GetNodeListCompleted;
        
        /// <remarks/>
        public event GetNodeListExtendedCompletedEventHandler GetNodeListExtendedCompleted;
        
        /// <remarks/>
        public event GetMeasurePointConsumptionCompletedEventHandler GetMeasurePointConsumptionCompleted;
        
        /// <remarks/>
        public event GetMeasurePointTotalsCompletedEventHandler GetMeasurePointTotalsCompleted;
        
        /// <remarks/>
        public event ExportMeasurePointDataToXml80020CompletedEventHandler ExportMeasurePointDataToXml80020Completed;
        
        /// <remarks/>
        public event GetMeasurePointElectricPowerCompletedEventHandler GetMeasurePointElectricPowerCompleted;
        
        /// <remarks/>
        public event GetMeasurePointDeviceErrorsCompletedEventHandler GetMeasurePointDeviceErrorsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/Login", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public Response Login([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] string userName, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((Response)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/Logout", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public Response Logout() {
            object[] results = this.Invoke("Logout", new object[0]);
            return ((Response)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointById", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePoint GetMeasurePointById([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId) {
            object[] results = this.Invoke("GetMeasurePointById", new object[] {
                        measurePointId});
            return ((ResponseGetMeasurePoint)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointByIdAsync(int measurePointId) {
            this.GetMeasurePointByIdAsync(measurePointId, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointByIdAsync(int measurePointId, object userState) {
            if ((this.GetMeasurePointByIdOperationCompleted == null)) {
                this.GetMeasurePointByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointByIdOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointById", new object[] {
                        measurePointId}, this.GetMeasurePointByIdOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointByIdOperationCompleted(object arg) {
            if ((this.GetMeasurePointByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointByIdCompleted(this, new GetMeasurePointByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointByIdExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePoint GetMeasurePointByIdExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] MeasurePointInfoFlags measurePointFlags) {
            object[] results = this.Invoke("GetMeasurePointByIdExtended", new object[] {
                        measurePointId,
                        measurePointFlags});
            return ((ResponseGetMeasurePoint)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointByIdExtendedAsync(int measurePointId, MeasurePointInfoFlags measurePointFlags) {
            this.GetMeasurePointByIdExtendedAsync(measurePointId, measurePointFlags, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointByIdExtendedAsync(int measurePointId, MeasurePointInfoFlags measurePointFlags, object userState) {
            if ((this.GetMeasurePointByIdExtendedOperationCompleted == null)) {
                this.GetMeasurePointByIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointByIdExtendedOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointByIdExtended", new object[] {
                        measurePointId,
                        measurePointFlags}, this.GetMeasurePointByIdExtendedOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointByIdExtendedOperationCompleted(object arg) {
            if ((this.GetMeasurePointByIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointByIdExtendedCompleted(this, new GetMeasurePointByIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointByNumber", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePoint GetMeasurePointByNumber([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointNumber) {
            object[] results = this.Invoke("GetMeasurePointByNumber", new object[] {
                        measurePointNumber});
            return ((ResponseGetMeasurePoint)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointByNumberAsync(int measurePointNumber) {
            this.GetMeasurePointByNumberAsync(measurePointNumber, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointByNumberAsync(int measurePointNumber, object userState) {
            if ((this.GetMeasurePointByNumberOperationCompleted == null)) {
                this.GetMeasurePointByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointByNumberOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointByNumber", new object[] {
                        measurePointNumber}, this.GetMeasurePointByNumberOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointByNumberOperationCompleted(object arg) {
            if ((this.GetMeasurePointByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointByNumberCompleted(this, new GetMeasurePointByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointByNumberExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePoint GetMeasurePointByNumberExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointNumber, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] MeasurePointInfoFlags measurePointFlags) {
            object[] results = this.Invoke("GetMeasurePointByNumberExtended", new object[] {
                        measurePointNumber,
                        measurePointFlags});
            return ((ResponseGetMeasurePoint)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointByNumberExtendedAsync(int measurePointNumber, MeasurePointInfoFlags measurePointFlags) {
            this.GetMeasurePointByNumberExtendedAsync(measurePointNumber, measurePointFlags, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointByNumberExtendedAsync(int measurePointNumber, MeasurePointInfoFlags measurePointFlags, object userState) {
            if ((this.GetMeasurePointByNumberExtendedOperationCompleted == null)) {
                this.GetMeasurePointByNumberExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointByNumberExtendedOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointByNumberExtended", new object[] {
                        measurePointNumber,
                        measurePointFlags}, this.GetMeasurePointByNumberExtendedOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointByNumberExtendedOperationCompleted(object arg) {
            if ((this.GetMeasurePointByNumberExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointByNumberExtendedCompleted(this, new GetMeasurePointByNumberExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeById", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNode GetNodeById([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int nodeId) {
            object[] results = this.Invoke("GetNodeById", new object[] {
                        nodeId});
            return ((ResponseGetNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeByIdAsync(int nodeId) {
            this.GetNodeByIdAsync(nodeId, null);
        }
        
        /// <remarks/>
        public void GetNodeByIdAsync(int nodeId, object userState) {
            if ((this.GetNodeByIdOperationCompleted == null)) {
                this.GetNodeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeByIdOperationCompleted);
            }
            this.InvokeAsync("GetNodeById", new object[] {
                        nodeId}, this.GetNodeByIdOperationCompleted, userState);
        }
        
        private void OnGetNodeByIdOperationCompleted(object arg) {
            if ((this.GetNodeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeByIdCompleted(this, new GetNodeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeByIdExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNode GetNodeByIdExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int nodeId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] NodeInfoFlags flags) {
            object[] results = this.Invoke("GetNodeByIdExtended", new object[] {
                        nodeId,
                        flags});
            return ((ResponseGetNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeByIdExtendedAsync(int nodeId, NodeInfoFlags flags) {
            this.GetNodeByIdExtendedAsync(nodeId, flags, null);
        }
        
        /// <remarks/>
        public void GetNodeByIdExtendedAsync(int nodeId, NodeInfoFlags flags, object userState) {
            if ((this.GetNodeByIdExtendedOperationCompleted == null)) {
                this.GetNodeByIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeByIdExtendedOperationCompleted);
            }
            this.InvokeAsync("GetNodeByIdExtended", new object[] {
                        nodeId,
                        flags}, this.GetNodeByIdExtendedOperationCompleted, userState);
        }
        
        private void OnGetNodeByIdExtendedOperationCompleted(object arg) {
            if ((this.GetNodeByIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeByIdExtendedCompleted(this, new GetNodeByIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeByNumber", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNode GetNodeByNumber([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int nodeNumber) {
            object[] results = this.Invoke("GetNodeByNumber", new object[] {
                        nodeNumber});
            return ((ResponseGetNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeByNumberAsync(int nodeNumber) {
            this.GetNodeByNumberAsync(nodeNumber, null);
        }
        
        /// <remarks/>
        public void GetNodeByNumberAsync(int nodeNumber, object userState) {
            if ((this.GetNodeByNumberOperationCompleted == null)) {
                this.GetNodeByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeByNumberOperationCompleted);
            }
            this.InvokeAsync("GetNodeByNumber", new object[] {
                        nodeNumber}, this.GetNodeByNumberOperationCompleted, userState);
        }
        
        private void OnGetNodeByNumberOperationCompleted(object arg) {
            if ((this.GetNodeByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeByNumberCompleted(this, new GetNodeByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeByNumberExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNode GetNodeByNumberExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int nodeNumber, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] NodeInfoFlags flags) {
            object[] results = this.Invoke("GetNodeByNumberExtended", new object[] {
                        nodeNumber,
                        flags});
            return ((ResponseGetNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeByNumberExtendedAsync(int nodeNumber, NodeInfoFlags flags) {
            this.GetNodeByNumberExtendedAsync(nodeNumber, flags, null);
        }
        
        /// <remarks/>
        public void GetNodeByNumberExtendedAsync(int nodeNumber, NodeInfoFlags flags, object userState) {
            if ((this.GetNodeByNumberExtendedOperationCompleted == null)) {
                this.GetNodeByNumberExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeByNumberExtendedOperationCompleted);
            }
            this.InvokeAsync("GetNodeByNumberExtended", new object[] {
                        nodeNumber,
                        flags}, this.GetNodeByNumberExtendedOperationCompleted, userState);
        }
        
        private void OnGetNodeByNumberExtendedOperationCompleted(object arg) {
            if ((this.GetNodeByNumberExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeByNumberExtendedCompleted(this, new GetNodeByNumberExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetRoomById", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetRoom GetRoomById([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int roomId) {
            object[] results = this.Invoke("GetRoomById", new object[] {
                        roomId});
            return ((ResponseGetRoom)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoomByIdAsync(int roomId) {
            this.GetRoomByIdAsync(roomId, null);
        }
        
        /// <remarks/>
        public void GetRoomByIdAsync(int roomId, object userState) {
            if ((this.GetRoomByIdOperationCompleted == null)) {
                this.GetRoomByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoomByIdOperationCompleted);
            }
            this.InvokeAsync("GetRoomById", new object[] {
                        roomId}, this.GetRoomByIdOperationCompleted, userState);
        }
        
        private void OnGetRoomByIdOperationCompleted(object arg) {
            if ((this.GetRoomByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoomByIdCompleted(this, new GetRoomByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetRoomByIdExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetRoom GetRoomByIdExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int roomId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] RoomInfoFlags roomFlags) {
            object[] results = this.Invoke("GetRoomByIdExtended", new object[] {
                        roomId,
                        roomFlags});
            return ((ResponseGetRoom)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoomByIdExtendedAsync(int roomId, RoomInfoFlags roomFlags) {
            this.GetRoomByIdExtendedAsync(roomId, roomFlags, null);
        }
        
        /// <remarks/>
        public void GetRoomByIdExtendedAsync(int roomId, RoomInfoFlags roomFlags, object userState) {
            if ((this.GetRoomByIdExtendedOperationCompleted == null)) {
                this.GetRoomByIdExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoomByIdExtendedOperationCompleted);
            }
            this.InvokeAsync("GetRoomByIdExtended", new object[] {
                        roomId,
                        roomFlags}, this.GetRoomByIdExtendedOperationCompleted, userState);
        }
        
        private void OnGetRoomByIdExtendedOperationCompleted(object arg) {
            if ((this.GetRoomByIdExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoomByIdExtendedCompleted(this, new GetRoomByIdExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointList", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePointList GetMeasurePointList() {
            object[] results = this.Invoke("GetMeasurePointList", new object[0]);
            return ((ResponseGetMeasurePointList)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointListAsync() {
            this.GetMeasurePointListAsync(null);
        }
        
        /// <remarks/>
        public void GetMeasurePointListAsync(object userState) {
            if ((this.GetMeasurePointListOperationCompleted == null)) {
                this.GetMeasurePointListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointListOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointList", new object[0], this.GetMeasurePointListOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointListOperationCompleted(object arg) {
            if ((this.GetMeasurePointListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointListCompleted(this, new GetMeasurePointListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeList", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNodeList GetNodeList() {
            object[] results = this.Invoke("GetNodeList", new object[0]);
            return ((ResponseGetNodeList)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeListAsync() {
            this.GetNodeListAsync(null);
        }
        
        /// <remarks/>
        public void GetNodeListAsync(object userState) {
            if ((this.GetNodeListOperationCompleted == null)) {
                this.GetNodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeListOperationCompleted);
            }
            this.InvokeAsync("GetNodeList", new object[0], this.GetNodeListOperationCompleted, userState);
        }
        
        private void OnGetNodeListOperationCompleted(object arg) {
            if ((this.GetNodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeListCompleted(this, new GetNodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetNodeListExtended", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetNodeList GetNodeListExtended([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] NodeInfoFlags flags) {
            object[] results = this.Invoke("GetNodeListExtended", new object[] {
                        flags});
            return ((ResponseGetNodeList)(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeListExtendedAsync(NodeInfoFlags flags) {
            this.GetNodeListExtendedAsync(flags, null);
        }
        
        /// <remarks/>
        public void GetNodeListExtendedAsync(NodeInfoFlags flags, object userState) {
            if ((this.GetNodeListExtendedOperationCompleted == null)) {
                this.GetNodeListExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeListExtendedOperationCompleted);
            }
            this.InvokeAsync("GetNodeListExtended", new object[] {
                        flags}, this.GetNodeListExtendedOperationCompleted, userState);
        }
        
        private void OnGetNodeListExtendedOperationCompleted(object arg) {
            if ((this.GetNodeListExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeListExtendedCompleted(this, new GetNodeListExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointConsumption", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePointConsumption GetMeasurePointConsumption([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] DeviceDataType dataType) {
            object[] results = this.Invoke("GetMeasurePointConsumption", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataType});
            return ((ResponseGetMeasurePointConsumption)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointConsumptionAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, DeviceDataType dataType) {
            this.GetMeasurePointConsumptionAsync(measurePointId, startDate, endDate, dataType, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointConsumptionAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, DeviceDataType dataType, object userState) {
            if ((this.GetMeasurePointConsumptionOperationCompleted == null)) {
                this.GetMeasurePointConsumptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointConsumptionOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointConsumption", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataType}, this.GetMeasurePointConsumptionOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointConsumptionOperationCompleted(object arg) {
            if ((this.GetMeasurePointConsumptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointConsumptionCompleted(this, new GetMeasurePointConsumptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointTotals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePointTotals GetMeasurePointTotals([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime endDate) {
            object[] results = this.Invoke("GetMeasurePointTotals", new object[] {
                        measurePointId,
                        startDate,
                        endDate});
            return ((ResponseGetMeasurePointTotals)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointTotalsAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate) {
            this.GetMeasurePointTotalsAsync(measurePointId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointTotalsAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetMeasurePointTotalsOperationCompleted == null)) {
                this.GetMeasurePointTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointTotalsOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointTotals", new object[] {
                        measurePointId,
                        startDate,
                        endDate}, this.GetMeasurePointTotalsOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointTotalsOperationCompleted(object arg) {
            if ((this.GetMeasurePointTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointTotalsCompleted(this, new GetMeasurePointTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/ExportMeasurePointDataToXml80020", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseExportMeasurePointDataToXml80020 ExportMeasurePointDataToXml80020([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime endDate) {
            object[] results = this.Invoke("ExportMeasurePointDataToXml80020", new object[] {
                        measurePointId,
                        startDate,
                        endDate});
            return ((ResponseExportMeasurePointDataToXml80020)(results[0]));
        }
        
        /// <remarks/>
        public void ExportMeasurePointDataToXml80020Async(int measurePointId, System.DateTime startDate, System.DateTime endDate) {
            this.ExportMeasurePointDataToXml80020Async(measurePointId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void ExportMeasurePointDataToXml80020Async(int measurePointId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.ExportMeasurePointDataToXml80020OperationCompleted == null)) {
                this.ExportMeasurePointDataToXml80020OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportMeasurePointDataToXml80020OperationCompleted);
            }
            this.InvokeAsync("ExportMeasurePointDataToXml80020", new object[] {
                        measurePointId,
                        startDate,
                        endDate}, this.ExportMeasurePointDataToXml80020OperationCompleted, userState);
        }
        
        private void OnExportMeasurePointDataToXml80020OperationCompleted(object arg) {
            if ((this.ExportMeasurePointDataToXml80020Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportMeasurePointDataToXml80020Completed(this, new ExportMeasurePointDataToXml80020CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointElectricPower", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePointElectricPower GetMeasurePointElectricPower([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] ElectricDataKind dataKind, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] ElectricPowerAveraging averagingInterval) {
            object[] results = this.Invoke("GetMeasurePointElectricPower", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataKind,
                        averagingInterval});
            return ((ResponseGetMeasurePointElectricPower)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointElectricPowerAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, ElectricDataKind dataKind, ElectricPowerAveraging averagingInterval) {
            this.GetMeasurePointElectricPowerAsync(measurePointId, startDate, endDate, dataKind, averagingInterval, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointElectricPowerAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, ElectricDataKind dataKind, ElectricPowerAveraging averagingInterval, object userState) {
            if ((this.GetMeasurePointElectricPowerOperationCompleted == null)) {
                this.GetMeasurePointElectricPowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointElectricPowerOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointElectricPower", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataKind,
                        averagingInterval}, this.GetMeasurePointElectricPowerOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointElectricPowerOperationCompleted(object arg) {
            if ((this.GetMeasurePointElectricPowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointElectricPowerCompleted(this, new GetMeasurePointElectricPowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lers.ru/website/api/GetMeasurePointDeviceErrors", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")]
        public ResponseGetMeasurePointDeviceErrors GetMeasurePointDeviceErrors([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] int measurePointId, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.lers.ru/website/api")] DeviceDataType dataTypes) {
            object[] results = this.Invoke("GetMeasurePointDeviceErrors", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataTypes});
            return ((ResponseGetMeasurePointDeviceErrors)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeasurePointDeviceErrorsAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, DeviceDataType dataTypes) {
            this.GetMeasurePointDeviceErrorsAsync(measurePointId, startDate, endDate, dataTypes, null);
        }
        
        /// <remarks/>
        public void GetMeasurePointDeviceErrorsAsync(int measurePointId, System.DateTime startDate, System.DateTime endDate, DeviceDataType dataTypes, object userState) {
            if ((this.GetMeasurePointDeviceErrorsOperationCompleted == null)) {
                this.GetMeasurePointDeviceErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeasurePointDeviceErrorsOperationCompleted);
            }
            this.InvokeAsync("GetMeasurePointDeviceErrors", new object[] {
                        measurePointId,
                        startDate,
                        endDate,
                        dataTypes}, this.GetMeasurePointDeviceErrorsOperationCompleted, userState);
        }
        
        private void OnGetMeasurePointDeviceErrorsOperationCompleted(object arg) {
            if ((this.GetMeasurePointDeviceErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeasurePointDeviceErrorsCompleted(this, new GetMeasurePointDeviceErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetNode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePointList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetNodeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePointConsumption))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePointTotals))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseExportMeasurePointDataToXml80020))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePointElectricPower))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseGetMeasurePointDeviceErrors))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Response {
        
        private string errorMessageField;
        
        private ErrorCode errorCodeField;
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public ErrorCode ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum ErrorCode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AuthorizationError,
        
        /// <remarks/>
        UserMessage,
        
        /// <remarks/>
        UnhandledException,
        
        /// <remarks/>
        IncorrectRequest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Room {
        
        private int idField;
        
        private string personalAccountNumberField;
        
        private string titleField;
        
        private byte residentCountField;
        
        private float areaField;
        
        private RoomType typeField;
        
        private MeasurePoint[] measurePointsField;
        
        private Equipment[] countersField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PersonalAccountNumber {
            get {
                return this.personalAccountNumberField;
            }
            set {
                this.personalAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public byte ResidentCount {
            get {
                return this.residentCountField;
            }
            set {
                this.residentCountField = value;
            }
        }
        
        /// <remarks/>
        public float Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public RoomType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public MeasurePoint[] MeasurePoints {
            get {
                return this.measurePointsField;
            }
            set {
                this.measurePointsField = value;
            }
        }
        
        /// <remarks/>
        public Equipment[] Counters {
            get {
                return this.countersField;
            }
            set {
                this.countersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum RoomType {
        
        /// <remarks/>
        Living,
        
        /// <remarks/>
        Nonresidential,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class MeasurePoint {
        
        private int idField;
        
        private string titleField;
        
        private string fullTitleField;
        
        private string addressField;
        
        private SystemType systemTypeField;
        
        private MeasurePointType typeField;
        
        private System.Nullable<int> numberField;
        
        private string commentField;
        
        private MeasurePointState stateField;
        
        private bool isDoublePipeHotWaterSystemField;
        
        private Equipment deviceField;
        
        private Equipment counterField;
        
        private bool isTwoChannelsField;
        
        private CustomAttributeCodeValue[] attributesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FullTitle {
            get {
                return this.fullTitleField;
            }
            set {
                this.fullTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public SystemType SystemType {
            get {
                return this.systemTypeField;
            }
            set {
                this.systemTypeField = value;
            }
        }
        
        /// <remarks/>
        public MeasurePointType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public MeasurePointState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDoublePipeHotWaterSystem {
            get {
                return this.isDoublePipeHotWaterSystemField;
            }
            set {
                this.isDoublePipeHotWaterSystemField = value;
            }
        }
        
        /// <remarks/>
        public Equipment Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <remarks/>
        public Equipment Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTwoChannels {
            get {
                return this.isTwoChannelsField;
            }
            set {
                this.isTwoChannelsField = value;
            }
        }
        
        /// <remarks/>
        public CustomAttributeCodeValue[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum SystemType {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Heat = 2,
        
        /// <remarks/>
        HotWater = 4,
        
        /// <remarks/>
        ColdWater = 8,
        
        /// <remarks/>
        Steam = 16,
        
        /// <remarks/>
        Gas = 32,
        
        /// <remarks/>
        Electricity = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum MeasurePointType {
        
        /// <remarks/>
        Regular,
        
        /// <remarks/>
        Communal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum MeasurePointState {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Equipment {
        
        private EquipmentModel modelField;
        
        private string serialNumberField;
        
        private string commentField;
        
        private System.Nullable<System.DateTime> lastCalibrationDateField;
        
        private System.Nullable<System.DateTime> scheduledCalibrationDateField;
        
        /// <remarks/>
        public EquipmentModel Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastCalibrationDate {
            get {
                return this.lastCalibrationDateField;
            }
            set {
                this.lastCalibrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ScheduledCalibrationDate {
            get {
                return this.scheduledCalibrationDateField;
            }
            set {
                this.scheduledCalibrationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class EquipmentModel {
        
        private int idField;
        
        private string titleField;
        
        private string longTitleField;
        
        private byte calibrationIntervalField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string LongTitle {
            get {
                return this.longTitleField;
            }
            set {
                this.longTitleField = value;
            }
        }
        
        /// <remarks/>
        public byte CalibrationInterval {
            get {
                return this.calibrationIntervalField;
            }
            set {
                this.calibrationIntervalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class CustomAttributeCodeValue {
        
        private string attributeCodeField;
        
        private string attributeValueField;
        
        /// <remarks/>
        public string AttributeCode {
            get {
                return this.attributeCodeField;
            }
            set {
                this.attributeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AttributeValue {
            get {
                return this.attributeValueField;
            }
            set {
                this.attributeValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class NodeSytemsInformation {
        
        private MeasurePoint[] allMeasurePointsField;
        
        /// <remarks/>
        public MeasurePoint[] AllMeasurePoints {
            get {
                return this.allMeasurePointsField;
            }
            set {
                this.allMeasurePointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ServiceCompany {
        
        private int idField;
        
        private string titleField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Serviceman {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Customer {
        
        private int idField;
        
        private string titleField;
        
        private bool isNaturalPersonField;
        
        private string vatIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNaturalPerson {
            get {
                return this.isNaturalPersonField;
            }
            set {
                this.isNaturalPersonField = value;
            }
        }
        
        /// <remarks/>
        public string VatId {
            get {
                return this.vatIdField;
            }
            set {
                this.vatIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class Node {
        
        private int idField;
        
        private string titleField;
        
        private string addressField;
        
        private System.Nullable<int> numberField;
        
        private string commentField;
        
        private string responsibleNameField;
        
        private string responsiblePhoneField;
        
        private NodeType typeField;
        
        private Customer customerField;
        
        private Serviceman servicemanField;
        
        private ServiceCompany serviceCompanyField;
        
        private NodeSytemsInformation systemsField;
        
        private Room[] roomsField;
        
        private CustomAttributeCodeValue[] attributesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleName {
            get {
                return this.responsibleNameField;
            }
            set {
                this.responsibleNameField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsiblePhone {
            get {
                return this.responsiblePhoneField;
            }
            set {
                this.responsiblePhoneField = value;
            }
        }
        
        /// <remarks/>
        public NodeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public Customer Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public Serviceman Serviceman {
            get {
                return this.servicemanField;
            }
            set {
                this.servicemanField = value;
            }
        }
        
        /// <remarks/>
        public ServiceCompany ServiceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        public NodeSytemsInformation Systems {
            get {
                return this.systemsField;
            }
            set {
                this.systemsField = value;
            }
        }
        
        /// <remarks/>
        public Room[] Rooms {
            get {
                return this.roomsField;
            }
            set {
                this.roomsField = value;
            }
        }
        
        /// <remarks/>
        public CustomAttributeCodeValue[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum NodeType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Node,
        
        /// <remarks/>
        House,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WaterConsumptionRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GasConsumptionRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ElectricConsumptionRecord))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public abstract partial class MeasurePointConsumptionRecord {
        
        private ResourceKind resourceKindField;
        
        private System.DateTime dateTimeField;
        
        /// <remarks/>
        public ResourceKind ResourceKind {
            get {
                return this.resourceKindField;
            }
            set {
                this.resourceKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum ResourceKind {
        
        /// <remarks/>
        Water,
        
        /// <remarks/>
        Electricity,
        
        /// <remarks/>
        Gas,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class WaterConsumptionRecord : MeasurePointConsumptionRecord {
        
        private System.Nullable<double> workTimeField;
        
        private System.Nullable<double> stopDurationField;
        
        private System.Nullable<double> flowUnderrunDurationField;
        
        private System.Nullable<double> flowOverrunDurationField;
        
        private System.Nullable<double> tempDiffLowDurationField;
        
        private System.Nullable<double> noPowerDurationField;
        
        private System.Nullable<double> incidentDurationField;
        
        private System.Nullable<double> saturatedSteamDurationField;
        
        private System.Nullable<double> t_inField;
        
        private System.Nullable<double> t_outField;
        
        private System.Nullable<double> t_deltaField;
        
        private System.Nullable<double> t_cwField;
        
        private System.Nullable<double> t_outdoorField;
        
        private System.Nullable<double> m_inField;
        
        private System.Nullable<double> m_outField;
        
        private System.Nullable<double> m_deltaField;
        
        private System.Nullable<double> q_inField;
        
        private System.Nullable<double> q_outField;
        
        private System.Nullable<double> q_deltaField;
        
        private System.Nullable<double> p_inField;
        
        private System.Nullable<double> p_outField;
        
        private System.Nullable<double> p_deltaField;
        
        private System.Nullable<double> v_inField;
        
        private System.Nullable<double> v_outField;
        
        private System.Nullable<double> v_deltaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> StopDuration {
            get {
                return this.stopDurationField;
            }
            set {
                this.stopDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FlowUnderrunDuration {
            get {
                return this.flowUnderrunDurationField;
            }
            set {
                this.flowUnderrunDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FlowOverrunDuration {
            get {
                return this.flowOverrunDurationField;
            }
            set {
                this.flowOverrunDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TempDiffLowDuration {
            get {
                return this.tempDiffLowDurationField;
            }
            set {
                this.tempDiffLowDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> NoPowerDuration {
            get {
                return this.noPowerDurationField;
            }
            set {
                this.noPowerDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IncidentDuration {
            get {
                return this.incidentDurationField;
            }
            set {
                this.incidentDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> SaturatedSteamDuration {
            get {
                return this.saturatedSteamDurationField;
            }
            set {
                this.saturatedSteamDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_in {
            get {
                return this.t_inField;
            }
            set {
                this.t_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_out {
            get {
                return this.t_outField;
            }
            set {
                this.t_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_delta {
            get {
                return this.t_deltaField;
            }
            set {
                this.t_deltaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_cw {
            get {
                return this.t_cwField;
            }
            set {
                this.t_cwField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_outdoor {
            get {
                return this.t_outdoorField;
            }
            set {
                this.t_outdoorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> M_in {
            get {
                return this.m_inField;
            }
            set {
                this.m_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> M_out {
            get {
                return this.m_outField;
            }
            set {
                this.m_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> M_delta {
            get {
                return this.m_deltaField;
            }
            set {
                this.m_deltaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_in {
            get {
                return this.q_inField;
            }
            set {
                this.q_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_out {
            get {
                return this.q_outField;
            }
            set {
                this.q_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_delta {
            get {
                return this.q_deltaField;
            }
            set {
                this.q_deltaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> P_in {
            get {
                return this.p_inField;
            }
            set {
                this.p_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> P_out {
            get {
                return this.p_outField;
            }
            set {
                this.p_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> P_delta {
            get {
                return this.p_deltaField;
            }
            set {
                this.p_deltaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_in {
            get {
                return this.v_inField;
            }
            set {
                this.v_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_out {
            get {
                return this.v_outField;
            }
            set {
                this.v_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_delta {
            get {
                return this.v_deltaField;
            }
            set {
                this.v_deltaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class GasConsumptionRecord : MeasurePointConsumptionRecord {
        
        private System.Nullable<double> workTimeField;
        
        private System.Nullable<double> tField;
        
        private System.Nullable<double> t_outdoorField;
        
        private System.Nullable<double> pField;
        
        private System.Nullable<double> vField;
        
        private System.Nullable<double> v_stdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T {
            get {
                return this.tField;
            }
            set {
                this.tField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> T_outdoor {
            get {
                return this.t_outdoorField;
            }
            set {
                this.t_outdoorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> P {
            get {
                return this.pField;
            }
            set {
                this.pField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V {
            get {
                return this.vField;
            }
            set {
                this.vField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_std {
            get {
                return this.v_stdField;
            }
            set {
                this.v_stdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ElectricConsumptionRecord : MeasurePointConsumptionRecord {
        
        private System.Nullable<double> normalOperationDurationField;
        
        private System.Nullable<double> apField;
        
        private System.Nullable<double> anField;
        
        private System.Nullable<double> rpField;
        
        private System.Nullable<double> rnField;
        
        private System.Nullable<double> ap1Field;
        
        private System.Nullable<double> an1Field;
        
        private System.Nullable<double> rp1Field;
        
        private System.Nullable<double> rn1Field;
        
        private System.Nullable<double> ap2Field;
        
        private System.Nullable<double> an2Field;
        
        private System.Nullable<double> rp2Field;
        
        private System.Nullable<double> rn2Field;
        
        private System.Nullable<double> ap3Field;
        
        private System.Nullable<double> an3Field;
        
        private System.Nullable<double> rp3Field;
        
        private System.Nullable<double> rn3Field;
        
        private System.Nullable<double> ap4Field;
        
        private System.Nullable<double> an4Field;
        
        private System.Nullable<double> rp4Field;
        
        private System.Nullable<double> rn4Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> NormalOperationDuration {
            get {
                return this.normalOperationDurationField;
            }
            set {
                this.normalOperationDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap {
            get {
                return this.apField;
            }
            set {
                this.apField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An {
            get {
                return this.anField;
            }
            set {
                this.anField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp {
            get {
                return this.rpField;
            }
            set {
                this.rpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn {
            get {
                return this.rnField;
            }
            set {
                this.rnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap1 {
            get {
                return this.ap1Field;
            }
            set {
                this.ap1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An1 {
            get {
                return this.an1Field;
            }
            set {
                this.an1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp1 {
            get {
                return this.rp1Field;
            }
            set {
                this.rp1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn1 {
            get {
                return this.rn1Field;
            }
            set {
                this.rn1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap2 {
            get {
                return this.ap2Field;
            }
            set {
                this.ap2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An2 {
            get {
                return this.an2Field;
            }
            set {
                this.an2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp2 {
            get {
                return this.rp2Field;
            }
            set {
                this.rp2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn2 {
            get {
                return this.rn2Field;
            }
            set {
                this.rn2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap3 {
            get {
                return this.ap3Field;
            }
            set {
                this.ap3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An3 {
            get {
                return this.an3Field;
            }
            set {
                this.an3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp3 {
            get {
                return this.rp3Field;
            }
            set {
                this.rp3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn3 {
            get {
                return this.rn3Field;
            }
            set {
                this.rn3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap4 {
            get {
                return this.ap4Field;
            }
            set {
                this.ap4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An4 {
            get {
                return this.an4Field;
            }
            set {
                this.an4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp4 {
            get {
                return this.rp4Field;
            }
            set {
                this.rp4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn4 {
            get {
                return this.rn4Field;
            }
            set {
                this.rn4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WaterTotalsRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GasTotalsRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ElectricTotalsRecord))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class MeasurePointTotalsRecord {
        
        private ResourceKind resourceKindField;
        
        private System.DateTime dateTimeField;
        
        /// <remarks/>
        public ResourceKind ResourceKind {
            get {
                return this.resourceKindField;
            }
            set {
                this.resourceKindField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class WaterTotalsRecord : MeasurePointTotalsRecord {
        
        private System.Nullable<double> workTimeField;
        
        private System.Nullable<double> stopDurationField;
        
        private System.Nullable<double> flowUnderrunDurationField;
        
        private System.Nullable<double> flowOverrunDurationField;
        
        private System.Nullable<double> tempDiffLowDurationField;
        
        private System.Nullable<double> noPowerDurationField;
        
        private System.Nullable<double> incidentDurationField;
        
        private System.Nullable<double> saturatedSteamDurationField;
        
        private System.Nullable<double> m_inField;
        
        private System.Nullable<double> m_outField;
        
        private System.Nullable<double> q_inField;
        
        private System.Nullable<double> q_outField;
        
        private System.Nullable<double> q_deltaField;
        
        private System.Nullable<double> v_inField;
        
        private System.Nullable<double> v_outField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> StopDuration {
            get {
                return this.stopDurationField;
            }
            set {
                this.stopDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FlowUnderrunDuration {
            get {
                return this.flowUnderrunDurationField;
            }
            set {
                this.flowUnderrunDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FlowOverrunDuration {
            get {
                return this.flowOverrunDurationField;
            }
            set {
                this.flowOverrunDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TempDiffLowDuration {
            get {
                return this.tempDiffLowDurationField;
            }
            set {
                this.tempDiffLowDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> NoPowerDuration {
            get {
                return this.noPowerDurationField;
            }
            set {
                this.noPowerDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> IncidentDuration {
            get {
                return this.incidentDurationField;
            }
            set {
                this.incidentDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> SaturatedSteamDuration {
            get {
                return this.saturatedSteamDurationField;
            }
            set {
                this.saturatedSteamDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> M_in {
            get {
                return this.m_inField;
            }
            set {
                this.m_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> M_out {
            get {
                return this.m_outField;
            }
            set {
                this.m_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_in {
            get {
                return this.q_inField;
            }
            set {
                this.q_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_out {
            get {
                return this.q_outField;
            }
            set {
                this.q_outField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Q_delta {
            get {
                return this.q_deltaField;
            }
            set {
                this.q_deltaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_in {
            get {
                return this.v_inField;
            }
            set {
                this.v_inField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_out {
            get {
                return this.v_outField;
            }
            set {
                this.v_outField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class GasTotalsRecord : MeasurePointTotalsRecord {
        
        private System.Nullable<double> workTimeField;
        
        private System.Nullable<double> vField;
        
        private System.Nullable<double> v_stdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> WorkTime {
            get {
                return this.workTimeField;
            }
            set {
                this.workTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V {
            get {
                return this.vField;
            }
            set {
                this.vField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> V_std {
            get {
                return this.v_stdField;
            }
            set {
                this.v_stdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ElectricTotalsRecord : MeasurePointTotalsRecord {
        
        private System.Nullable<double> ap1Field;
        
        private System.Nullable<double> an1Field;
        
        private System.Nullable<double> rp1Field;
        
        private System.Nullable<double> rn1Field;
        
        private System.Nullable<double> ap2Field;
        
        private System.Nullable<double> an2Field;
        
        private System.Nullable<double> rp2Field;
        
        private System.Nullable<double> rn2Field;
        
        private System.Nullable<double> ap3Field;
        
        private System.Nullable<double> an3Field;
        
        private System.Nullable<double> rp3Field;
        
        private System.Nullable<double> rn3Field;
        
        private System.Nullable<double> ap4Field;
        
        private System.Nullable<double> an4Field;
        
        private System.Nullable<double> rp4Field;
        
        private System.Nullable<double> rn4Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap1 {
            get {
                return this.ap1Field;
            }
            set {
                this.ap1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An1 {
            get {
                return this.an1Field;
            }
            set {
                this.an1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp1 {
            get {
                return this.rp1Field;
            }
            set {
                this.rp1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn1 {
            get {
                return this.rn1Field;
            }
            set {
                this.rn1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap2 {
            get {
                return this.ap2Field;
            }
            set {
                this.ap2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An2 {
            get {
                return this.an2Field;
            }
            set {
                this.an2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp2 {
            get {
                return this.rp2Field;
            }
            set {
                this.rp2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn2 {
            get {
                return this.rn2Field;
            }
            set {
                this.rn2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap3 {
            get {
                return this.ap3Field;
            }
            set {
                this.ap3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An3 {
            get {
                return this.an3Field;
            }
            set {
                this.an3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp3 {
            get {
                return this.rp3Field;
            }
            set {
                this.rp3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn3 {
            get {
                return this.rn3Field;
            }
            set {
                this.rn3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Ap4 {
            get {
                return this.ap4Field;
            }
            set {
                this.ap4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> An4 {
            get {
                return this.an4Field;
            }
            set {
                this.an4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rp4 {
            get {
                return this.rp4Field;
            }
            set {
                this.rp4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Rn4 {
            get {
                return this.rn4Field;
            }
            set {
                this.rn4Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class MeasurePointElectricPowerRecord {
        
        private System.DateTime dateTimeField;
        
        private short intervalField;
        
        private System.Nullable<double> ppField;
        
        private System.Nullable<double> pnField;
        
        private System.Nullable<double> qpField;
        
        private System.Nullable<double> qnField;
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public short Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pp {
            get {
                return this.ppField;
            }
            set {
                this.ppField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Pn {
            get {
                return this.pnField;
            }
            set {
                this.pnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Qp {
            get {
                return this.qpField;
            }
            set {
                this.qpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Qn {
            get {
                return this.qnField;
            }
            set {
                this.qnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class MeasurePointDeviceErrorRecord {
        
        private DeviceEventArchiveType archiveTypeField;
        
        private short channelNumberField;
        
        private System.DateTime dateTimeField;
        
        private int codeField;
        
        private string descriptionField;
        
        private int durationField;
        
        /// <remarks/>
        public DeviceEventArchiveType ArchiveType {
            get {
                return this.archiveTypeField;
            }
            set {
                this.archiveTypeField = value;
            }
        }
        
        /// <remarks/>
        public short ChannelNumber {
            get {
                return this.channelNumberField;
            }
            set {
                this.channelNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum DeviceEventArchiveType {
        
        /// <remarks/>
        Common,
        
        /// <remarks/>
        HeatLeadIn,
        
        /// <remarks/>
        Channel,
        
        /// <remarks/>
        DiscreteInput,
        
        /// <remarks/>
        DiscreteOutput,
        
        /// <remarks/>
        ModeChange,
        
        /// <remarks/>
        UserActions,
        
        /// <remarks/>
        PowerInterruptionPeriods,
        
        /// <remarks/>
        ConfigChanges,
        
        /// <remarks/>
        Diagnostics,
        
        /// <remarks/>
        Incidents,
        
        /// <remarks/>
        MonthPowerInterruptions,
        
        /// <remarks/>
        DayPowerInterruptions,
        
        /// <remarks/>
        DiagnosticNonAffectingRecording,
        
        /// <remarks/>
        IncidentsAffectingRecording,
        
        /// <remarks/>
        DaySummarizedIncidents,
        
        /// <remarks/>
        HourSummarizedIncidents,
        
        /// <remarks/>
        CommonEvents,
        
        /// <remarks/>
        IndividualEvents,
        
        /// <remarks/>
        PrevAndCurrMonthIncidents,
        
        /// <remarks/>
        PeripherialErrors,
        
        /// <remarks/>
        Failures,
        
        /// <remarks/>
        Errors,
        
        /// <remarks/>
        Warnings,
        
        /// <remarks/>
        Messages,
        
        /// <remarks/>
        BasicLog,
        
        /// <remarks/>
        SystemLog,
        
        /// <remarks/>
        HotWaterLog,
        
        /// <remarks/>
        System1,
        
        /// <remarks/>
        System2,
        
        /// <remarks/>
        System3,
        
        /// <remarks/>
        Status5,
        
        /// <remarks/>
        Status6,
        
        /// <remarks/>
        StatusSys,
        
        /// <remarks/>
        HardwareIncidents,
        
        /// <remarks/>
        HardwareEvents,
        
        /// <remarks/>
        HsEvents,
        
        /// <remarks/>
        HmEvents,
        
        /// <remarks/>
        HeatSystemEvents,
        
        /// <remarks/>
        AdditionalIncidents,
        
        /// <remarks/>
        SensorFailures,
        
        /// <remarks/>
        HeatSystemIncidents,
        
        /// <remarks/>
        HardwareFailures,
        
        /// <remarks/>
        HeatSystemStatus,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePoint : Response {
        
        private MeasurePoint measurePointField;
        
        /// <remarks/>
        public MeasurePoint MeasurePoint {
            get {
                return this.measurePointField;
            }
            set {
                this.measurePointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetNode : Response {
        
        private Node nodeField;
        
        /// <remarks/>
        public Node Node {
            get {
                return this.nodeField;
            }
            set {
                this.nodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetRoom : Response {
        
        private Room roomField;
        
        /// <remarks/>
        public Room Room {
            get {
                return this.roomField;
            }
            set {
                this.roomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePointList : Response {
        
        private MeasurePoint[] measurePointListField;
        
        /// <remarks/>
        public MeasurePoint[] MeasurePointList {
            get {
                return this.measurePointListField;
            }
            set {
                this.measurePointListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetNodeList : Response {
        
        private Node[] nodeListField;
        
        /// <remarks/>
        public Node[] NodeList {
            get {
                return this.nodeListField;
            }
            set {
                this.nodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePointConsumption : Response {
        
        private MeasurePointConsumptionRecord[] dataField;
        
        /// <remarks/>
        public MeasurePointConsumptionRecord[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePointTotals : Response {
        
        private MeasurePointTotalsRecord[] totalsField;
        
        /// <remarks/>
        public MeasurePointTotalsRecord[] Totals {
            get {
                return this.totalsField;
            }
            set {
                this.totalsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseExportMeasurePointDataToXml80020 : Response {
        
        private string xmlField;
        
        /// <remarks/>
        public string Xml {
            get {
                return this.xmlField;
            }
            set {
                this.xmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePointElectricPower : Response {
        
        private MeasurePointElectricPowerRecord[] electricPowerField;
        
        /// <remarks/>
        public MeasurePointElectricPowerRecord[] ElectricPower {
            get {
                return this.electricPowerField;
            }
            set {
                this.electricPowerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public partial class ResponseGetMeasurePointDeviceErrors : Response {
        
        private MeasurePointDeviceErrorRecord[] monthArchiveField;
        
        private MeasurePointDeviceErrorRecord[] dayArchiveField;
        
        private MeasurePointDeviceErrorRecord[] hourArchiveField;
        
        /// <remarks/>
        public MeasurePointDeviceErrorRecord[] MonthArchive {
            get {
                return this.monthArchiveField;
            }
            set {
                this.monthArchiveField = value;
            }
        }
        
        /// <remarks/>
        public MeasurePointDeviceErrorRecord[] DayArchive {
            get {
                return this.dayArchiveField;
            }
            set {
                this.dayArchiveField = value;
            }
        }
        
        /// <remarks/>
        public MeasurePointDeviceErrorRecord[] HourArchive {
            get {
                return this.hourArchiveField;
            }
            set {
                this.hourArchiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum MeasurePointInfoFlags {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Equipment = 2,
        
        /// <remarks/>
        ContractConsumption = 4,
        
        /// <remarks/>
        ConsumptionLimit = 8,
        
        /// <remarks/>
        Attributes = 16,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum NodeInfoFlags {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Systems = 2,
        
        /// <remarks/>
        Customer = 4,
        
        /// <remarks/>
        Serviceman = 8,
        
        /// <remarks/>
        ServiceCompany = 16,
        
        /// <remarks/>
        NodeGroups = 32,
        
        /// <remarks/>
        BalanceFormulae = 64,
        
        /// <remarks/>
        DiagSettings = 128,
        
        /// <remarks/>
        Reports = 256,
        
        /// <remarks/>
        Suppliers = 512,
        
        /// <remarks/>
        Equipment = 1024,
        
        /// <remarks/>
        Rooms = 2048,
        
        /// <remarks/>
        ContractTemperature = 4096,
        
        /// <remarks/>
        Signaling = 8192,
        
        /// <remarks/>
        Attributes = 16384,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum RoomInfoFlags {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        MeasurePoints = 2,
        
        /// <remarks/>
        Counters = 4,
        
        /// <remarks/>
        ContractConsumption = 8,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum DeviceDataType {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        DeviceConfig = 2,
        
        /// <remarks/>
        Events = 4,
        
        /// <remarks/>
        Current = 8,
        
        /// <remarks/>
        Interval = 16,
        
        /// <remarks/>
        Month = 32,
        
        /// <remarks/>
        Day = 64,
        
        /// <remarks/>
        Hour = 128,
        
        /// <remarks/>
        PowerProfile = 256,
        
        /// <remarks/>
        Totals = 512,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum ElectricDataKind {
        
        /// <remarks/>
        Raw,
        
        /// <remarks/>
        Real,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.lers.ru/website/api")]
    public enum ElectricPowerAveraging {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Hourly,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        HalfHourly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Response Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Response)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Response Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Response)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointByIdCompletedEventHandler(object sender, GetMeasurePointByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePoint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointByIdExtendedCompletedEventHandler(object sender, GetMeasurePointByIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointByIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointByIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePoint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointByNumberCompletedEventHandler(object sender, GetMeasurePointByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePoint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointByNumberExtendedCompletedEventHandler(object sender, GetMeasurePointByNumberExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointByNumberExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointByNumberExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePoint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeByIdCompletedEventHandler(object sender, GetNodeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeByIdExtendedCompletedEventHandler(object sender, GetNodeByIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeByIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeByIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeByNumberCompletedEventHandler(object sender, GetNodeByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeByNumberExtendedCompletedEventHandler(object sender, GetNodeByNumberExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeByNumberExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeByNumberExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRoomByIdCompletedEventHandler(object sender, GetRoomByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoomByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoomByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetRoom Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetRoom)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRoomByIdExtendedCompletedEventHandler(object sender, GetRoomByIdExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoomByIdExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoomByIdExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetRoom Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetRoom)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointListCompletedEventHandler(object sender, GetMeasurePointListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePointList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePointList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeListCompletedEventHandler(object sender, GetNodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNodeList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNodeList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNodeListExtendedCompletedEventHandler(object sender, GetNodeListExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeListExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeListExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetNodeList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetNodeList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointConsumptionCompletedEventHandler(object sender, GetMeasurePointConsumptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointConsumptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointConsumptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePointConsumption Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePointConsumption)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointTotalsCompletedEventHandler(object sender, GetMeasurePointTotalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePointTotals Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePointTotals)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExportMeasurePointDataToXml80020CompletedEventHandler(object sender, ExportMeasurePointDataToXml80020CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportMeasurePointDataToXml80020CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportMeasurePointDataToXml80020CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseExportMeasurePointDataToXml80020 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseExportMeasurePointDataToXml80020)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointElectricPowerCompletedEventHandler(object sender, GetMeasurePointElectricPowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointElectricPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointElectricPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePointElectricPower Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePointElectricPower)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMeasurePointDeviceErrorsCompletedEventHandler(object sender, GetMeasurePointDeviceErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeasurePointDeviceErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeasurePointDeviceErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseGetMeasurePointDeviceErrors Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseGetMeasurePointDeviceErrors)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591